version: '3'
services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: app
    command: /entrypoint.sh
#    command: sh -c "uwsgi --strict --ini uwsgi.ini"
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./app:/opt/app

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: worker
    command: /celeryworker.sh
    env_file: .env
    volumes:
      - ./app:/opt/app
    depends_on:
      - redis
      - app

  celery_beater:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: beater
    command: /celerybeater.sh
    volumes:
      - ./app:/opt/app
    depends_on:
      - redis
      - app

  esearch:
    container_name: esearch
    image: elasticsearch:${ES_VERSION}
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    volumes:
      - ./app/static:/static
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - app
    ports:
      - "80:80"

  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker/db_data:/var/lib/postgresql/data
